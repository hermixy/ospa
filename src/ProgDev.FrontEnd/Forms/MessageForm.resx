<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_IconBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARuSURBVFhHxVZvTJVlHBUsLT/U1martVWr1cBJEXKvYJCYmv8tpasMMUIQFRSXthhwE1vrz+oD
        fWp+qVZrazNzsZhoCMQl7hX0AgUIJQlc8Lq55taXlmt2Ouc+99aVvdw/bsBvO97X53d+55z3fZ/3fZkD
        YFZhuTiTsFycSZh/4q/ElmpbcWetDYKOtWZacdbtBChb9fDC8+9kAVc/DUDHWgu246vbCHCnqybd5W88
        CHh3BKBjralnKHFUnAESPitdnO39cCXP/Bhw4iHgG2K8DlpTTxxDjbHiDDDfc8T+1x/dbwE/rgeOP2DA
        Y62pJ46hxlhxBEhsOJxWdfHYi8DoUZ79g8DJRwx0zDX1xBHXjMRQcQRY4Hba8M/4R0DTEqD+UeC7xw10
        zDX1xBHXjMRQMQaY21qV/q3/VCnwSzlNHwManwTOPmFwmscNXGNPHHE1Y0ajVAwBEr7Y91R29wcrgIn3
        abaI5slAcxKWrS9F1oZSDH2+lOtJwBn2yBFXM5o1EhEqhgDzO5w2//X2CqB3mwnQlAK0L8K63D3Y6NiD
        ka8yGWixCUCOuJrRrJGIUFECJJ56fQk3Hnf8RA2NadKcCrQ+A7hTsDmvHFvyyzDy9bPAD1xXTxxyNaNZ
        aRipKSpKgAUepx03BquAztVASxrN04E24lwqcnccxLadFRg9uRxwcWOqJw65mtGsNIzUFBUhwNymyvRP
        xk7kAZe58dpo4OK9dmXwuefv+TTkvXoY+UWHMFb/PNBhNz1xxOWMZqUhLSNpUVMESKgrSEruepuX1lfJ
        M8rhPV9GY77/BTfXvXYUlFSicPcb8DW8AHjC+uJqhrPSkJY0jfSkmiLAvPYaW//1tl3AEN/3bop6niN4
        qYVOHvdmonBvDXaVVWO8cR3Qlf1/X1zNcFYa0pKmkZ5UFgES619LK7n48RrAf4iXmpe3i49gl36DuMD/
        92WhuPwodh+oxfiZjbwiPONwjmY0Sw1pSVPaxiKsLALc7XEuxY2BfcDAFprxw3OBGzAc3lUMkIOi/e+h
        +MC7GP1+K9BtwdMsNaQlTWkbi7CaFCCw8X77kmfk41uvhyI9vBI9a29FL9G3GmPNDvhaHLjZzcf0Jwte
        YJYa1JKm5YYMC8CNlxzceHuZfBNFNxAMY4UB9i7x3g8TgwzQZ8EJgDxpUdNsyORbN2RYgHntTnv/tdO5
        fIQKgP7NBL98Vhgghjche00Jlq8txlAjb8FgBL60qCltecjLWLKCARKOV6Ru/bmOG+lKCT8qEowA9Ude
        guOVamwvrMLl1nzgV+4XK24ImqG2POQlTxmHAtx1rjbz7z+92/ldp9glR3SMvIyxjiL43EW4OcSX1bAF
        ZzKoLQ95yVPGoQD3ddbyg/J7IR+bnXyX8xZM6DcCrpBzNQi/+NFmxOMvPeQlTxmHAiw8W23vZzJ43szg
        IzNNoLY8XEcyxuUp41CAe4gUIodYOc1YQTxN3Ev8F+AOQiGU6v5phjxkbv6EDwaYvVKA2YTl4swBc/4F
        5x7TXHzXXmMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="_DetailTxt.Text" xml:space="preserve">
    <value>Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail Detail </value>
  </data>
</root>