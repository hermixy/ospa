<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fi8Dh/8ARX/v9hf1z00AAAAASUVORK5CYII=
</value>
  </data>
</root>