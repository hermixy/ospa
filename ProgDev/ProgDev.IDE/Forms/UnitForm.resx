<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_IconBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAYxSURBVFhHxVdZUJNXGNW2TqerdVrbGVsXCE5tp4v7hsgiOwIqOlVH61K0BQSpWtHWZWwlVdGA
        UYGwCC4simBFlC0QRBZZRAlSl7a2D50+tY++9OX0OzcJBAgBO53pnTnz5d77feecm+S/9/4jAPyv6P3w
        FC0+fNyraTEaQ2acGzJjNWBkn+PWlOG3pzAwMmWTa4ghRtOZs+1dlOyfCeNRL9TqvFUs2T8LuTKesUXT
        eXyTSwjzLWVDtGEYeDY1WqPNiNU8Kdj9Acq081B33AemFB/UJnsrmFK81VjlEXfkJ7yP3Hg3GGJcnqRG
        u2pZb6EZpA1iYKQu0nVOWrTmYvbWySjaOwM1stIbel8RWgSToFYMmGhEUH7IHZf2TsXlb+eh4VwMHpr0
        uF0YjYt7piE7bjLIQz7yWujtWj8Dz+g/d12fEeP6+5kd76nV3kwNQP0pf9w46ScQAyd8VSQqZMXF+6ai
        LCkAzQXxuFeRiLbzG8SUJ+r0PlLnp+rJQz7ykp86FjlpdgZGZW7R/FW09yPUJC9EQ7oUp/kLgT/qrVB9
        QdVRD1ntLFSkhKH90g6Yr+xEc85yMSXf0slFIuwr+X6WGmsd+chLfjHykHoUtTfwWkbMRDTmxeO3lhwh
        3Y4GQ5CFJD1QCIJQrfPEFe0CVJ+KQEdxPDoubEZTdpjFYFqACAVKbpAV8lnGaKTBEKj4yEt+6ojeaIra
        G3jTEDUef5ivolwXjNZL3+BhXTLuXUtAjd4bZYc9YEqPQHvBRrTnrxXhxWjMCLIgM1gQYoV8ljGKNp8O
        l/qdwqNDW/EeVCWHKn7qiN5YivYz8A5+bcpBeeIMVGhno1KMNJ6Pwn1jIn6s2C0r/hRNWUFozg4WhIhA
        aD8sVnOteSthLo2TOi1a8rfAqA9FReJslB+cofipQz2KDvgGfr5pEPE5qDw0X6Hi+7moTPJBQ85adF1P
        EOJYtBWsREtuKFrOhAnCrQhFe+EqdF2NE3yFlnMbYNT5WeptXLIo8lu/AQcGoifgUa1eiuag6vACVB3x
        ULHysLuMzZPogcasFegsiUJXaRRuX1iN1vNL0XFxtYxtRlv+RtSlLVF5Kl8eT3se8pKfOtSj6AADD6qT
        lOuewh5YjXAlgtrjfrLq5fJbB6DuZBCqkrxk3F2JMo/5feqVgbmK36mB7mvfqcTKAQZ6iThHE+Xyuz5u
        KVSxz2odQNUIL/mdGJiIe1f3oVo2GOPRhQLPwZEkxIfm4pem0yoak4bIFz7ykp861KNoXwPyfJp/2AXj
        sYWyaXgJvAeHzgvVSe74qT5dRfYd5vXAS/GSnzrUo2g/A5Ngvrxdkj3lN5aDRvb5QSEHkFG3AI9k32dk
        32FeD2jCU/FTh3oUHWDgbkmc2se55zuFngeSJx7UHFORfYd59hBe8js3UBRlOWx4ADmDHE4m2SHvV2lV
        VIeVozx7CC/5nRhwkd0uUvZx2de5lztFAG6k+qK78oCKw60hP3WoR9GBBgrXoYF7eUbwEOCB44/u63tU
        HG4N+Qc1IMck7hSuUft8U9ZQ4KETiK6yXSqy7zivF+QlP3WoR9E+BnjBNOr90HZ2iez14biVE+bgwOkF
        Rc2lX6roaN4G8pCPvOSnDvUoam/gdbnVJsql8+/iAzPlghGKtrwItJ5bihYpvCUHTn80y4FkvhKroqN5
        1rGePOQjL/mpQz2K2ht4UeAm8Ij0f+vIic0ufxbLradezvWOwhVyB4iQ69YyRdiDs+HovPyFivbjzGM+
        61hPHvKRl/xWHer1McB72gsCfjVTBPMDp4+JSf5s0uOCrz+GSW49d4s+sZgpEDN5ywRLxUCkiuxznPPM
        Yz7rWE8e8ll5yU8dy73QzoCt2Yy8IdAIZk/XvLz64Jrx9bnbpqBGnndz8SolcucCj+b1KrLPcc4zj/ms
        Y72Vh3y9wrbmwICt8Qr9vGCMYKJg2tjRo4K1ayfczNrqhuuyr3cWr0R36ToV2ec455nHfGsd68nj+EXF
        iQFbYyFvsHztGi8gsU/C8rcL+TgZol3UY8U+x63zzGM+65y/IQ3DgH17TvCKYJzgQwH/UIuskX2Oc555
        w2tPacDW+Lr1koC/K/9UjOw7fw1z1P6lgf+ojRjxD1HdeQXtd9LhAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="_ErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="_ErrorProvider.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAP///////wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AQEAAAAAAAAAAQEBAQEBAQEAAAAAAAAAAAABAQEBAQEBAAAAAQEBAAAAAQEBAQEBAQAAAAEB
        AQAAAAEBAQEBAQEAAAAAAAAAAAABAQEBAQEBAAAAAAAAAAAAAQEBAQEBAQAAAAABAAAAAAEBAQEBAQEA
        AAAAAQAAAAABAQEBAQEBAAAAAQEBAAAAAQEBAQEBAQAAAAEBAQAAAAEBAQEBAQEAAAABAQEAAAABAQEB
        AQEBAAAAAQEBAAAAAQEBAQEBAQAAAAEBAQAAAAEBAQEBAQEAAAABAQEAAAABAQEBAQEBAAAAAAAAAAAA
        AQEBAQEBAQEAAAAAAAAAAQEBAQEBAcB/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/
        AACAPwAAgD8AAIA/AACAPwAAgD8AAMB/AAA=
</value>
  </data>
</root>